# ZABBIX SSH MONITORING
module(load="omfile")

# Anti-Flooding Schutz
$SystemLogRateLimitInterval 1
$SystemLogRateLimitBurst 1000
$RepeatedMsgReduction on

# Pr√§zisions-Template
template(name="ZabbixSSH" type="list") {
    property(name="timestamp" dateFormat="rfc3339")
    constant(value=" ")
    property(name="hostname")
    constant(value=" ")
    property(name="msg" spifno1stsp="on")
    property(name="msg" droplastlf="on")
    constant(value="\n")
}

# SSH Monitoring Rules
:programname, isequal, "sshd" {
    # LOGIN SUCCESS
    if $msg contains "Accepted password for " or $msg contains "Accepted publickey for " then {
        action(
            type="omfile"
            File="/var/log/zabbix-monitor/ssh-login-success.log"
            Template="ZabbixSSH"
            FileOwner="root"
            FileGroup="zabbix"
            FileCreateMode="0640"
            CreateDirs="on"
            Sync="off"
            FlushOnTXEnd="on"
            IOBufferSize="64k"
            dynaFileCacheSize="0"
        )
        stop
    }

    # LOGOUT
    if $msg contains "session closed for user " then {
        action(
            type="omfile"
            File="/var/log/zabbix-monitor/ssh-logout.log"
            Template="ZabbixSSH"
            FileOwner="root"
            FileGroup="zabbix"
            FileCreateMode="0640"
            CreateDirs="on"
            Sync="off"
            FlushOnTXEnd="on"
            IOBufferSize="64k"
            dynaFileCacheSize="0"
        )
        stop
    }

    # LOGIN FAILED
    if $msg contains "Failed password" or $msg contains "Invalid user" or $msg contains "Connection closed by authenticating user" then {
        action(
            type="omfile"
            File="/var/log/zabbix-monitor/ssh-login-failed.log"
            Template="ZabbixSSH"
            FileOwner="root"
            FileGroup="zabbix"
            FileCreateMode="0640"
            CreateDirs="on"
            Sync="off"
            FlushOnTXEnd="on"
            IOBufferSize="64k"
            dynaFileCacheSize="0"
        )
        stop
    }
}
